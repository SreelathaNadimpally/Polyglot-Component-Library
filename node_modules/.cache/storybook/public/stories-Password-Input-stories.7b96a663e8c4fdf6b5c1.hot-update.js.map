{"version":3,"file":"stories-Password-Input-stories.7b96a663e8c4fdf6b5c1.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAvBA;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAZA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAnBA;AAqBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAZA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA","sources":["webpack://componentlibrary/./src/components/Button/Button.tsx","webpack://componentlibrary/./src/components/Email-Input/EmailInput.tsx","webpack://componentlibrary/./src/components/InputField/InputField.tsx","webpack://componentlibrary/./src/components/Password-Input/PasswordInput.tsx","webpack://componentlibrary/./src/index.ts"],"sourcesContent":["// import './button.css';\r\nimport React from 'react';\r\n\r\nexport interface ButtonProps {\r\n    onClick: () => void;\r\n    disabled?: boolean;\r\n    className?: string;\r\n    children: React.ReactNode;\r\n    primary?: boolean;\r\n    label?: string;\r\n    size: 'small' | 'medium' | 'large';\r\n    backgroundColor?: string;\r\n    name: string;\r\n    mode: string;\r\n    style?: React.CSSProperties;\r\n    variant: 'primary' | 'success' | 'danger' | 'warning';\r\n}\r\n\r\nconst Button = ({ onClick, disabled, children, size, mode, variant, style, className }: ButtonProps) => {\r\n    const handleClick = () => {\r\n        onClick();\r\n        alert('Button clicked!');\r\n    };\r\n\r\n    return (\r\n        <button\r\n            style={{\r\n                color: 'white',\r\n                backgroundColor: '#072196dd',\r\n                borderRadius: 10,\r\n                ...style\r\n            }}\r\n            type=\"button\"\r\n            name=\"ButtonName\"\r\n            onClick={handleClick}\r\n            disabled={disabled}\r\n            className={className}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React, { ChangeEvent } from 'react';\r\n\r\nexport interface EmailInputProps {\r\n    label: string;\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n    placeholder?: string;\r\n    disabled?: boolean;\r\n}\r\n\r\nconst EmailInput: React.FC<EmailInputProps> = ({ label, value, onChange, placeholder, disabled }) => {\r\n    const handleEmailChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const newValue = event.target.value;\r\n        onChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input type=\"Email\" value={value} onChange={handleEmailChange} placeholder={placeholder} disabled={disabled} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmailInput;\r\n","import React, { ChangeEvent } from 'react';\r\n\r\nexport interface InputFieldProps {\r\n    label: string;\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n    placeholder?: string;\r\n    disabled?: boolean; \r\n}\r\n\r\nconst InputField: React.FC<InputFieldProps> = ({ label, value, onChange, placeholder, disabled }) => {\r\n    \r\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const newValue = event.target.value;\r\n        onChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={handleInputChange}\r\n                placeholder={placeholder}\r\n                disabled={disabled} \r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputField;\r\n","import React, { ChangeEvent } from 'react';\r\n\r\nexport interface PasswordInputProps {\r\n    label: string;\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n    placeholder?: string;\r\n    disabled?: boolean;\r\n}\r\n\r\nconst PasswordInput: React.FC<PasswordInputProps> = ({ label, value, onChange, placeholder, disabled }) => {\r\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const newValue = event.target.value;\r\n        onChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input type=\"password\" value={value} onChange={handleInputChange} placeholder={placeholder} disabled={disabled} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PasswordInput;\r\n","export * from \"./components/Button\";\r\nexport * from \"./components/InputField\";\r\nexport * from './components/Email-Input';\r\nexport * from './components/Password-Input';"],"names":[],"sourceRoot":""}