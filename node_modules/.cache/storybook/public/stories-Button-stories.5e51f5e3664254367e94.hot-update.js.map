{"version":3,"file":"stories-Button-stories.5e51f5e3664254367e94.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA","sources":["webpack://componentlibrary/./src/components/Button/Button.tsx","webpack://componentlibrary/./src/components/InputField/InputField.tsx","webpack://componentlibrary/./src/index.ts"],"sourcesContent":["interface ButtonProps {\r\n    onClick: () => void;\r\n    disabled?: boolean;\r\n    className?: string;\r\n    children: React.ReactNode;\r\n}\r\n\r\nimport React from 'react';\r\n\r\nexport const Button: React.FC<ButtonProps> = ({ onClick, disabled, className, children }) => {\r\n    return (\r\n        <button onClick={onClick} disabled={disabled} className={className}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\n","import React, { ChangeEvent } from 'react';\r\n\r\ninterface InputFieldProps {\r\n    label: string;\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n}\r\n\r\nexport const InputField: React.FC<InputFieldProps> = ({ label, value, onChange }) => {\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const newValue = event.target.value;\r\n        onChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input type=\"text\" value={value} onChange={handleChange} />\r\n        </div>\r\n    );\r\n};\r\n\r\n","export * from \"./components/Button\";\r\nexport * from \"./components/InputField\";"],"names":[],"sourceRoot":""}