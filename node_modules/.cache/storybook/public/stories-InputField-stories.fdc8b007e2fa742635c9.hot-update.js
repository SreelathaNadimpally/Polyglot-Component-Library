"use strict";
self["webpackHotUpdatecomponentlibrary"]("stories-InputField-stories",{

/***/ "./src/stories/InputField.stories.tsx":
/*!********************************************!*\
  !*** ./src/stories/InputField.stories.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Base: () => (/* binding */ Base),
/* harmony export */   Disabled: () => (/* binding */ Disabled),
/* harmony export */   WithPlaceholder: () => (/* binding */ WithPlaceholder),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_InputField_InputField__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/InputField/InputField */ "./src/components/InputField/InputField.tsx");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");



const meta = {
  title: 'InputField',
  component: _components_InputField_InputField__WEBPACK_IMPORTED_MODULE_1__["default"],
  args: {
    label: 'Input Field',
    value: '',
    onChange: value => {
      console.log('Value changed:', value);
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
const Base = args => {
  const [inputValue, setInputValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const handleInputChange = value => {
    setInputValue(value);
    console.log('Base Value:', value);
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_components_InputField_InputField__WEBPACK_IMPORTED_MODULE_1__["default"], {
    ...args,
    value: inputValue,
    onChange: handleInputChange
  });
};
Base.displayName = "Base";
const WithPlaceholder = args => {
  const [inputValue, setInputValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const handleInputChange = value => {
    setInputValue(value);
    console.log('WithPlaceholder Value:', value);
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_components_InputField_InputField__WEBPACK_IMPORTED_MODULE_1__["default"], {
    ...args,
    value: inputValue,
    onChange: handleInputChange,
    placeholder: "Type here..."
  });
};
WithPlaceholder.displayName = "WithPlaceholder";
const Disabled = args => {
  const [inputValue, setInputValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const handleInputChange = value => {
    setInputValue(value);
    console.log('Disabled Value:', value);
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_components_InputField_InputField__WEBPACK_IMPORTED_MODULE_1__["default"], {
    ...args,
    value: inputValue,
    onChange: handleInputChange,
    disabled: true
  });
};
Disabled.displayName = "Disabled";
Base.parameters = {
  ...Base.parameters,
  docs: {
    ...Base.parameters?.docs,
    source: {
      originalSource: "args => {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (value: string) => {\n    setInputValue(value);\n    console.log('Base Value:', value);\n  };\n  return <InputField {...args} value={inputValue} onChange={handleInputChange} />;\n}",
      ...Base.parameters?.docs?.source
    }
  }
};
WithPlaceholder.parameters = {
  ...WithPlaceholder.parameters,
  docs: {
    ...WithPlaceholder.parameters?.docs,
    source: {
      originalSource: "args => {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (value: string) => {\n    setInputValue(value);\n    console.log('WithPlaceholder Value:', value);\n  };\n  return <InputField {...args} value={inputValue} onChange={handleInputChange} placeholder=\"Type here...\" />;\n}",
      ...WithPlaceholder.parameters?.docs?.source
    }
  }
};
Disabled.parameters = {
  ...Disabled.parameters,
  docs: {
    ...Disabled.parameters?.docs,
    source: {
      originalSource: "args => {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (value: string) => {\n    setInputValue(value);\n    console.log('Disabled Value:', value);\n  };\n  return <InputField {...args} value={inputValue} onChange={handleInputChange} disabled={true} />;\n}",
      ...Disabled.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["Base", "WithPlaceholder", "Disabled"];

/***/ })

});