"use strict";
self["webpackHotUpdatecomponentlibrary"]("stories-Button-stories",{

/***/ "./src/stories/Button.stories.tsx":
/*!****************************************!*\
  !*** ./src/stories/Button.stories.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Primary: () => (/* binding */ Primary),
/* harmony export */   Secondary: () => (/* binding */ Secondary),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
Object(function webpackMissingModule() { var e = new Error("Cannot find module '../components/'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
// import React from 'react';



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Components/Button',
  component: Object(function webpackMissingModule() { var e = new Error("Cannot find module '../components/'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())
});

// Template for the story with args
const Template = args => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Object(function webpackMissingModule() { var e = new Error("Cannot find module '../components/'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), {
  ...args
});
Template.displayName = "Template";
// Basic button story
const Primary = Template.bind({});
Primary.args = {
  label: 'Primary Button'
};

// Secondary button story
const Secondary = Template.bind({});
Secondary.args = {
  label: 'Secondary Button',
  variant: 'secondary'
};
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "args => <Button {...args} />",
      ...Primary.parameters?.docs?.source
    }
  }
};
Secondary.parameters = {
  ...Secondary.parameters,
  docs: {
    ...Secondary.parameters?.docs,
    source: {
      originalSource: "args => <Button {...args} />",
      ...Secondary.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["Primary", "Secondary"];

/***/ })

});